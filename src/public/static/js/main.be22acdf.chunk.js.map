{"version":3,"sources":["services/auth.js","actions/auth.js","helpers/formatEvent.js","services/calendar.js","actions/calendar.js","actions/modal.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteFab.jsx","components/calendar/Event.jsx","components/ui/Navbar.jsx","localization/calendar-messages-es.js","pages/CalendarPage.jsx","hooks/useForm.js","pages/LoginPage.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/CalendarRouter.jsx","reducers/auth.js","reducers/calendar.js","store/index.js","reducers/modal.js","CalendarApp.jsx","index.jsx"],"names":["baseUrl","process","loginService","email","password","axios","post","then","data","catch","response","registerService","name","renewService","config","headers","localStorage","getItem","get","AUTH_CHECKING_FINISH","AUTH_LOGIN","AUTH_LOGOUT","login","payload","type","formatEvent","end","start","rest","moment","toDate","getConfig","createEvent","event","deleteOneEvent","eventId","delete","getAllEvents","updateOneEvent","put","id","CALENDAR_CLEAR_ACTIVE","CALENDAR_DELETE_EVENT","CALENDAR_CLEAR","CALENDAR_NEW_EVENT","CALENDAR_SET_ACTIVE","CALENDAR_SET_EVENTS","CALENDAR_UPDATE_EVENT","clearEventActive","newEvent","MODAL_OPEN","MODAL_CLOSE","modalOpen","modalClose","customStyles","content","left","top","transform","Modal","setAppElement","startDate","minutes","seconds","add","initEvent","description","clone","title","CalendarModal","modal","useSelector","state","activeEvent","calendar","dispatch","useDispatch","useState","formValues","setFormValues","titleInvalid","setTitleInvalid","useEffect","handleFormValueChange","target","value","isOpen","onRequestClose","style","closeTimeoutMS","className","overlayClassName","onSubmit","evt","preventDefault","momentStartDate","momentEndDate","isSameOrAfter","Swal","fire","icon","text","footer","length","a","msg","ok","formattedEvent","newEventStart","htmlFor","onChange","date","minDate","cols","rows","AddNewFab","onClick","getState","Event","user","Navbar","auth","removeItem","messages","allDay","previous","next","today","month","week","day","agenda","time","noEventsInRange","showMore","total","locale","CalendarPage","events","lastView","setLastView","map","components","eventPropGetter","backgroundColor","borderRadius","color","outline","localizer","momentLocalizer","onDoubleClickEvent","onSelectEvent","e","onSelectSlot","selectable","onView","setItem","view","DeleteFab","useForm","initialState","changeInputs","resetInputs","initLogin","loginEmail","loginPassword","initRegister","confirmPassword","LoginPage","changeLoginInputs","registerInputs","changeRegisterInputs","resetRegisterInputs","handleLoginChange","handleRegisterChange","token","uid","Date","getTime","loginStart","placeholder","required","registerStart","PrivateRoute","Component","component","logged","props","to","PublicRoute","CalendarRouter","checking","path","reducer","combineReducers","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be22acdf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/auth`;\n\nexport const loginService = ({ email, password }) => axios\n  .post(`${baseUrl}/login`, { email, password })\n  .then(({ data }) => data)\n  .catch(({ response: { data } }) => data);\n\nexport const registerService = ({ email, name, password }) => axios\n  .post(`${baseUrl}/register`, { email, name, password })\n  .then(({ data }) => data)\n  .catch(({ response: { data } }) => data);\n\nexport const renewService = () => {\n  const token = localStorage.getItem('token') || '';\n  const config = { headers: { 'X-Authorization': token } };\n\n  return axios\n    .get(`${baseUrl}/renew`, config)\n    .then(({ data }) => data)\n    .catch(({ response: { data } }) => data);\n};\n","import Swal from 'sweetalert2';\n\nimport { loginService, registerService, renewService } from '../services/auth';\n\nexport const AUTH_CHECKING_FINISH = 'AUTH_CHECKING_FINISH';\nexport const AUTH_LOGIN = 'AUTH_LOGIN';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nconst notLogged = () => ({\n  type: AUTH_CHECKING_FINISH,\n});\n\nconst login = (payload) => ({\n  type: AUTH_LOGIN,\n  payload,\n});\n\nexport const renewStart = () => async (dispatch) => {\n  const { data, ok } = await renewService();\n\n  if (!ok) {\n    dispatch(notLogged());\n  } else {\n    const { name, token, uid } = data;\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('token-init', new Date().getTime());\n    dispatch(login({ name, uid }));\n  }\n};\n\nexport const loginStart = ({ email, password }) => async (dispatch) => {\n  const { data, msg, ok } = await loginService({ email, password });\n\n  if (!ok) {\n    Swal.fire('Error', msg, 'error');\n  } else {\n    const { name, token, uid } = data;\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('token-init', new Date().getTime());\n    dispatch(login({ name, uid }));\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('token-init');\n\n  return ({\n    type: AUTH_LOGOUT,\n  });\n};\n\nexport const registerStart = ({ email, name, password }) => async (dispatch) => {\n  const { data, msg, ok } = await registerService({ email, name, password });\n\n  if (!ok) {\n    Swal.fire('Error', msg, 'error');\n  } else {\n    const { token, uid } = data;\n\n    localStorage.setItem('token', token);\n    localStorage.setItem('token-init', new Date().getTime());\n    dispatch(login({ name, uid }));\n  }\n};\n","import moment from 'moment';\n\nconst formatEvent = ({ end, start, ...rest }) => ({\n  ...rest,\n  end: moment(end).toDate(),\n  start: moment(start).toDate(),\n});\n\nexport default formatEvent;\n","import axios from 'axios';\n\nconst baseUrl = `${process.env.REACT_APP_API_URL}/events`;\nconst getConfig = () => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      'X-Authorization': token,\n    },\n  };\n};\n\nexport const createEvent = (event) => {\n  const config = getConfig();\n\n  return axios\n    .post(`${baseUrl}/`, event, config)\n    .then(({ data }) => data)\n    .catch(({ response: { data } }) => data);\n};\n\nexport const deleteOneEvent = (eventId) => {\n  const config = getConfig();\n\n  return axios\n    .delete(`${baseUrl}/${eventId}`, config)\n    .then(({ data }) => data)\n    .catch(({ response: { data } }) => data);\n};\n\nexport const getAllEvents = () => {\n  const config = getConfig();\n\n  return axios\n    .get(`${baseUrl}/`, config)\n    .then(({ data }) => data)\n    .catch(({ response: { data } }) => data);\n};\n\nexport const updateOneEvent = (event) => {\n  const config = getConfig();\n\n  return axios\n    .put(`${baseUrl}/${event.id}`, event, config)\n    .then(({ data }) => data)\n    .catch(({ response: { data } }) => data);\n};\n","import Swal from 'sweetalert2';\n\nimport formatEvent from '../helpers/formatEvent';\nimport {\n  // eslint-disable-next-line no-unused-vars\n  createEvent, deleteOneEvent, getAllEvents, updateOneEvent,\n} from '../services/calendar';\n\nexport const CALENDAR_CLEAR_ACTIVE = 'CALENDAR_CLEAR_ACTIVE';\nexport const CALENDAR_DELETE_EVENT = 'CALENDAR_DELETE_EVENT';\nexport const CALENDAR_CLEAR = 'CALENDAR_CLEAR';\nexport const CALENDAR_NEW_EVENT = 'CALENDAR_NEW_EVENT';\nexport const CALENDAR_SET_ACTIVE = 'CALENDAR_SET_ACTIVE';\nexport const CALENDAR_SET_EVENTS = 'CALENDAR_SET_EVENTS';\nexport const CALENDAR_UPDATE_EVENT = 'CALENDAR_UPDATE_EVENT';\n\nexport const clearEventActive = () => ({\n  type: CALENDAR_CLEAR_ACTIVE,\n});\n\nconst deleteEvent = () => ({\n  type: CALENDAR_DELETE_EVENT,\n});\n\nexport const deleteEventStart = () => async (dispatch, getState) => {\n  const { id } = getState().calendar.activeEvent;\n  const { msg, ok } = await deleteOneEvent(id);\n\n  if (!ok) {\n    Swal.fire('Error', msg, 'error');\n  } else {\n    dispatch(deleteEvent());\n    Swal.fire('Success', msg, 'success');\n  }\n};\n\nexport const clearCalendar = () => ({\n  type: CALENDAR_CLEAR,\n});\n\nconst setEvents = (payload) => ({\n  type: CALENDAR_SET_EVENTS,\n  payload,\n});\n\nexport const getEvents = () => async (dispatch) => {\n  const { data, msg, ok } = await getAllEvents();\n\n  if (!ok) {\n    Swal.fire('Error', msg, 'error');\n  } else {\n    const events = data.map(formatEvent);\n    dispatch(setEvents(events));\n  }\n};\n\nconst newEvent = (event) => ({\n  type: CALENDAR_NEW_EVENT,\n  payload: { ...event },\n});\n\nexport const newEventStart = (event) => async (dispatch) => {\n  const { data, msg, ok } = await createEvent(event);\n\n  if (!ok) {\n    Swal.fire('Error', msg, 'error');\n  } else {\n    const formattedEvent = formatEvent(data);\n    dispatch(newEvent(formattedEvent));\n  }\n};\n\nexport const setEventActive = (payload) => ({\n  type: CALENDAR_SET_ACTIVE,\n  payload,\n});\n\nconst updateEvent = (payload) => ({\n  type: CALENDAR_UPDATE_EVENT,\n  payload,\n});\n\nexport const updateEventStart = (event) => async (dispatch) => {\n  const { data, msg, ok } = await updateOneEvent(event);\n\n  if (!ok) {\n    Swal.fire('Error', msg, 'error');\n  } else {\n    const formattedEvent = formatEvent(data);\n    dispatch(updateEvent(formattedEvent));\n  }\n};\n","export const MODAL_OPEN = 'MODAL_OPEN';\nexport const MODAL_CLOSE = 'MODAL_CLOSE';\n\nexport const modalOpen = () => ({\n  type: MODAL_OPEN,\n});\n\nexport const modalClose = () => ({\n  type: MODAL_CLOSE,\n});\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { clearEventActive, newEventStart, updateEventStart } from '../../actions/calendar';\nimport { modalClose } from '../../actions/modal';\n\nimport '../../styles/modal.css';\n\nconst customStyles = {\n  content: {\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst startDate = moment().minutes(0).seconds(0).add(1, 'hours');\nconst endDate = startDate.clone().add(1, 'hours');\n\nconst initEvent = {\n  description: '',\n  end: endDate.toDate(),\n  start: startDate.toDate(),\n  title: '',\n};\n\nconst CalendarModal = () => {\n  const modal = useSelector((state) => state.modal);\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const dispatch = useDispatch();\n  const [formValues, setFormValues] = useState(initEvent);\n  const [titleInvalid, setTitleInvalid] = useState(false);\n\n  const {\n    description, id, end, start, title,\n  } = formValues;\n\n  useEffect(() => {\n    if (activeEvent !== null) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent]);\n\n  const closeModal = () => {\n    dispatch(modalClose());\n    dispatch(clearEventActive());\n    setFormValues(initEvent);\n  };\n\n  const handleEndDateChange = (date) => {\n    setFormValues({\n      ...formValues,\n      end: date,\n    });\n  };\n\n  const handleFormValueChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleStartDateChange = (date) => {\n    setFormValues({\n      ...formValues,\n      start: date,\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const momentStartDate = moment(start);\n    const momentEndDate = moment(end);\n\n    if (momentStartDate.isSameOrAfter(momentEndDate)) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'End date has to be later than start date',\n        footer: '<a href=\"\">Why do I have this issue?</a>',\n      });\n    }\n\n    if (title.length < 3) {\n      return setTitleInvalid(true);\n    }\n\n    setTitleInvalid(false);\n    // TODO: enviar valores\n    if (id) {\n      dispatch(updateEventStart(formValues));\n    } else {\n      dispatch(newEventStart(formValues));\n    }\n    return dispatch(modalClose());\n  };\n\n  return (\n    <Modal\n      isOpen={modal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal p-4\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1>{ id ? 'Update Event' : 'New Event'}</h1>\n      <hr />\n      <form className=\"row g-3\" onSubmit={handleSubmit}>\n        <div className=\"col-12\">\n          <label\n            className=\"form-label\"\n            htmlFor=\"startDate\"\n          >\n            Start Date\n          </label>\n          <DateTimePicker\n            className=\"form-control\"\n            id=\"startDate\"\n            onChange={handleStartDateChange}\n            value={start}\n          />\n        </div>\n        <div className=\"col-12\">\n          <label\n            className=\"form-label\"\n            htmlFor=\"endDate\"\n          >\n            End Date\n          </label>\n          <DateTimePicker\n            className=\"form-control\"\n            id=\"endDate\"\n            minDate={start}\n            onChange={handleEndDateChange}\n            value={end}\n          />\n        </div>\n        <div className=\"col-12\">\n          <label htmlFor=\"title\" className=\"form-label\">\n            Title\n          </label>\n          <input\n            className={`form-control ${titleInvalid && 'is-invalid'}`}\n            id=\"title\"\n            name=\"title\"\n            onChange={handleFormValueChange}\n            type=\"text\"\n            value={title}\n          />\n        </div>\n        <div className=\"col-12\">\n          <label htmlFor=\"description\" className=\"form-label\">\n            Description\n          </label>\n          <textarea\n            className=\"form-control\"\n            cols=\"30\"\n            id=\"description\"\n            name=\"description\"\n            onChange={handleFormValueChange}\n            rows=\"5\"\n            value={description}\n          />\n        </div>\n        <div className=\"col-12 mt-3\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary w-100\"\n          >\n            { id ? 'Update Event' : 'New Event'}\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CalendarModal;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { modalOpen } from '../../actions/modal';\n\nimport '../../styles/ui.css';\n\nconst AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleOnClick = () => {\n    dispatch(modalOpen());\n  };\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={handleOnClick}\n      type=\"button\"\n    >\n      <i className=\"fas fa-plus\" />\n    </button>\n  );\n};\n\nexport default AddNewFab;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteEventStart } from '../../actions/calendar';\n\nimport '../../styles/ui.css';\n\nconst AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleOnClick = () => {\n    dispatch(deleteEventStart());\n  };\n\n  return (\n    <button\n      className=\"btn btn-danger fab-delete\"\n      onClick={handleOnClick}\n      type=\"button\"\n    >\n      <i className=\"fas fa-trash\" />\n    </button>\n  );\n};\n\nexport default AddNewFab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Event = ({ event }) => {\n  const { title, user } = event;\n  return (\n    <div>\n      <span>\n        {title}\n        {' '}\n        -\n        {' '}\n        {user.name}\n      </span>\n    </div>\n  );\n};\n\nEvent.propTypes = {\n  event: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Event;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { logout } from '../../actions/auth';\nimport { clearCalendar } from '../../actions/calendar';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    dispatch(clearCalendar());\n    dispatch(logout());\n  };\n\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button\n        className=\"btn btn-outline-secondary\"\n        onClick={handleLogout}\n        type=\"button\"\n      >\n        <i className=\"fas fa-sign-out-alt\" />\n        <span> Salir</span>\n      </button>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n};\n\nexport default messages;\n","import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport { clearEventActive, getEvents, setEventActive } from '../actions/calendar';\nimport { modalOpen } from '../actions/modal';\nimport CalendarModal from '../components/calendar/CalendarModal';\nimport AddNewFab from '../components/ui/AddNewFab';\nimport DeleteFab from '../components/ui/DeleteFab';\nimport Event from '../components/calendar/Event';\nimport Navbar from '../components/ui/Navbar';\nimport messages from '../localization/calendar-messages-es';\n\nimport '../styles/calendar.css';\n\nmoment.locale('es');\n\nconst CalendarPage = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'week');\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, []);\n\n  const components = {\n    event: Event,\n  };\n\n  const eventStyleGetter = () => ({\n    style: {\n      backgroundColor: 'red',\n      borderRadius: '0px',\n      color: 'white',\n      outline: 'none',\n    },\n  });\n\n  const onDoubleClik = () => {\n    dispatch(modalOpen());\n  };\n\n  const onSelect = (e) => {\n    dispatch(setEventActive(e));\n  };\n\n  const onSelectSlot = () => {\n    dispatch(clearEventActive());\n  };\n\n  const onView = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  return (\n    <div className=\"calendar-container\">\n      <Navbar />\n      <Calendar\n        components={components}\n        events={events}\n        eventPropGetter={eventStyleGetter}\n        localizer={momentLocalizer(moment)}\n        messages={messages}\n        onDoubleClickEvent={onDoubleClik}\n        onSelectEvent={onSelect}\n        onSelectSlot={onSelectSlot}\n        selectable\n        onView={onView}\n        view={lastView}\n      />\n      {\n        activeEvent\n        && <DeleteFab />\n      }\n      <AddNewFab />\n      <CalendarModal />\n    </div>\n  );\n};\n\nexport default CalendarPage;\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [formValues, setFormValues] = useState(initialState);\n\n  const changeInputs = ({ name, value }) => {\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const resetInputs = () => setFormValues(initialState);\n\n  return [formValues, changeInputs, resetInputs];\n};\n\nexport default useForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { loginStart, registerStart } from '../actions/auth';\nimport useForm from '../hooks/useForm';\n\nimport '../styles/login.css';\n\nconst initLogin = {\n  loginEmail: '',\n  loginPassword: '',\n};\n\nconst initRegister = {\n  confirmPassword: '',\n  email: '',\n  name: '',\n  password: '',\n};\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const [{ loginEmail, loginPassword }, changeLoginInputs] = useForm(initLogin);\n  const [registerInputs, changeRegisterInputs, resetRegisterInputs] = useForm(initRegister);\n\n  const handleLogin = (evt) => {\n    evt.preventDefault();\n\n    // TODO: Validations?\n    dispatch(loginStart({\n      email: loginEmail,\n      password: loginPassword,\n    }));\n  };\n\n  const handleLoginChange = ({ target }) => changeLoginInputs(target);\n\n  const handleRegister = (evt) => {\n    evt.preventDefault();\n    const {\n      confirmPassword, email, name, password,\n    } = registerInputs;\n\n    // TODO: more validations?\n    if (password !== confirmPassword) {\n      Swal.fire('Error', 'Both passwords have to been equal', 'error');\n    } else {\n      dispatch(registerStart({ email, name, password }));\n      resetRegisterInputs();\n    }\n  };\n\n  const handleRegisterChange = ({ target }) => changeRegisterInputs(target);\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form\">\n          <form\n            className=\"form-signin\"\n            onSubmit={handleLogin}\n          >\n            <h3>Sign In</h3>\n            <input\n              className=\"form-control\"\n              id=\"inputEmail\"\n              name=\"loginEmail\"\n              onChange={handleLoginChange}\n              placeholder=\"Email address\"\n              required\n              type=\"email\"\n              value={loginEmail}\n            />\n            <input\n              className=\"form-control\"\n              id=\"inputPassword\"\n              name=\"loginPassword\"\n              onChange={handleLoginChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={loginPassword}\n            />\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n          </form>\n        </div>\n        <div className=\"col-md-6 login-form dark\">\n          <form\n            className=\"form-signup\"\n            onSubmit={handleRegister}\n          >\n            <h3>Sign Up</h3>\n            <input\n              className=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n              onChange={handleRegisterChange}\n              placeholder=\"Name\"\n              required\n              type=\"text\"\n              value={registerInputs.name}\n            />\n            <input\n              className=\"form-control\"\n              id=\"email\"\n              name=\"email\"\n              onChange={handleRegisterChange}\n              placeholder=\"Email address\"\n              required\n              type=\"email\"\n              value={registerInputs.email}\n            />\n            <input\n              className=\"form-control\"\n              id=\"password\"\n              name=\"password\"\n              onChange={handleRegisterChange}\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              value={registerInputs.password}\n            />\n            <input\n              className=\"form-control\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              onChange={handleRegisterChange}\n              placeholder=\"Repeat password\"\n              required\n              type=\"password\"\n              value={registerInputs.confirmPassword}\n            />\n            <button\n              className=\"btn btn-lg btn-primary btn-block\"\n              type=\"submit\"\n            >\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// FIXME: add proptypes\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nconst PrivateRoute = ({\n  component: Component,\n  logged,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    component={(props) => (logged\n      ? <Component {...props} />\n      : <Redirect to=\"/login\" />\n    )}\n  />\n);\n\nexport default PrivateRoute;\n","// FIXME: add proptypes\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nconst PublicRoute = ({\n  component: Component,\n  logged,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    component={(props) => (logged\n      ? <Redirect to=\"/\" />\n      : <Component {...props} />\n    )}\n  />\n);\n\nexport default PublicRoute;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\n\nimport { renewStart } from '../actions/auth';\nimport CalendarPage from '../pages/CalendarPage';\nimport LoginPage from '../pages/LoginPage';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nconst CalendarRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(renewStart());\n  }, []);\n\n  if (checking) {\n    return <h1>Loading...</h1>;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute\n          component={LoginPage}\n          logged={!!uid}\n          path=\"/login\"\n        />\n        <PrivateRoute\n          component={CalendarPage}\n          logged={!!uid}\n          path=\"/\"\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default CalendarRouter;\n","import { AUTH_CHECKING_FINISH, AUTH_LOGIN, AUTH_LOGOUT } from '../actions/auth';\n\nconst initialState = {\n  checking: true,\n  name: null,\n  uid: null,\n};\n\n// eslint-disable-next-line no-unused-vars\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case AUTH_CHECKING_FINISH:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case AUTH_LOGIN:\n      return {\n        checking: false,\n        name: payload.name,\n        uid: payload.uid,\n      };\n\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        name: null,\n        uid: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  CALENDAR_CLEAR,\n  CALENDAR_CLEAR_ACTIVE,\n  CALENDAR_DELETE_EVENT,\n  CALENDAR_NEW_EVENT,\n  CALENDAR_SET_ACTIVE,\n  CALENDAR_SET_EVENTS,\n  CALENDAR_UPDATE_EVENT,\n} from '../actions/calendar';\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CALENDAR_CLEAR:\n      return { ...initialState };\n\n    case CALENDAR_CLEAR_ACTIVE:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case CALENDAR_DELETE_EVENT:\n      return {\n        events: state.events.filter((event) => event.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case CALENDAR_NEW_EVENT:\n      return {\n        events: [...state.events, payload],\n        activeEvent: payload,\n      };\n\n    case CALENDAR_SET_ACTIVE:\n      return {\n        ...state,\n        activeEvent: { ...payload },\n      };\n\n    case CALENDAR_SET_EVENTS:\n      return {\n        ...state,\n        events: payload,\n      };\n\n    case CALENDAR_UPDATE_EVENT:\n      return {\n        ...state,\n        events: state.events.map((event) => (event.id !== payload.id ? event : payload)),\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  applyMiddleware, combineReducers, compose, createStore,\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport auth from '../reducers/auth';\nimport calendar from '../reducers/calendar';\nimport modal from '../reducers/modal';\n\nconst reducer = combineReducers({\n  auth,\n  calendar,\n  modal,\n});\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import { MODAL_CLOSE, MODAL_OPEN } from '../actions/modal';\n\nexport default (state = false, { type }) => {\n  switch (type) {\n    case MODAL_OPEN:\n      return true;\n\n    case MODAL_CLOSE:\n      return false;\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport CalendarRouter from './routers/CalendarRouter';\nimport store from './store';\n\nconst CalendarApp = () => (\n  <Provider store={store}>\n    <CalendarRouter />\n  </Provider>\n);\n\nexport default CalendarApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}